version: 2.1

executors:
  linuxgo:
    docker:
      - image: circleci/golang:1.10

jobs:
  setup:
    executor: linuxgo
    steps:
      - run: mkdir -p /tmp/be
      - run: curl -q -L -o /tmp/be/buildevents https://157-172153261-gh.circle-artifacts.com/0/go/src/github.com/honeycombio/buildevents/artifacts/buildevents
      - run: chmod 755 /tmp/be/buildevents
      - persist_to_workspace:
          root: /tmp/be
          paths:
            - buildevents
  catchend:
    executor: linuxgo
    steps:
      - attach_workspace:
          at: /tmp/be
      - run: /tmp/be/buildevents watch 2 3 4
  sleep2:
    executor: linuxgo
    steps:
      - run: date +%s > /tmp/start
      - run: buildevents cmd $CIRCLE_WORKFLOW_ID \
              ${CIRCLE_JOB} sleep -- sleep 20
      - run:
          name: report_span
          command: buildevents step $CIRCLE_WORKFLOW_ID \
              $(cat /tmp/buildevents/be/${CIRCLE_JOB}/span_id) \
              $CIRCLE_JOB \
              $CIRCLE_JOB
          when: always

  sleep3:
    executor: linuxgo
    steps:
      - run: date +%s > /tmp/start
      - run: sleep 15
      - run: "false"
      - run:
          name: report_span
          command: buildevents step $CIRCLE_WORKFLOW_ID \
              $(cat /tmp/buildevents/be/${CIRCLE_JOB}/span_id) \
              $CIRCLE_JOB \
              $CIRCLE_JOB
          when: always
  finish:
    executor: linuxgo
    steps:
      - run: echo "all done"

workflows:
  paint:
    jobs:
      - setup
      - catchend:
          requires:
            - setup
      - sleep2:
          requires:
            - setup
      - sleep3:
          requires:
            - setup
      - finish:
          requires:
            - sleep2
            - sleep3

